<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<title><?php echo $this->translation['Application Name'] . " | " . $this->pageTitle; ?></title>
	<?php
	require_once('views/helpers/Location.php');
	require_once('views/helpers/ScriptContainer.php');
	require_once('views/helpers/FormHelper.php');
	print ScriptContainer::$instance->renderCSSHead();
	print ScriptContainer::$instance->renderJSHead();
	?>

</head>
<body class="yui-skin-sam"  >

	<div id="pageHolder">

		<div id="header"><?php require_once('views/scripts/header.phtml');?></div>
		<div id="content">

			<?php require_once 'views/scripts/status.phtml' ?>

			<h1><?php $this->mode == 'add' ? print(t('Add').space.t('Employee')) : print(t('Edit').space.t('Employee')); ?></h1>
			<form action="" method="post" class="form_employee">
				<legend></legend>

					<?php if ($this->employee['id'] && $this->hasACL('edit_employee')): ?>
						<div class="historyDiv">
							<a href="<?php echo $this->base_url; ?>/employee/delete/id/<?php echo $this->employee['id']; ?>"><?php echo t('Delete this').space.t('Employee'); ?></a>
							<a href="<?php echo $this->base_url; ?>/employee/add_funder_to_employee/id/<?php echo $this->employee['id']; ?>"><?php echo t('Add Funder'); ?></a>
						</div>
					<?php
						endif; // fi historyDiv

						// form fields
						//if (! $this->hasACL('employees_module')) $this->read_only = true; // readonly
						// gnr:Jan.9.14 SA Emergency $this->required_fields = array('first_name', 'last_name','dob','select_lookup_nationalities', 'partner_id', 'subpartner_id', 'based_at', 'select_employee_qualification_option','salary','benefits','additional_expenses','stipend','employee_transition_option_id', 'select_employee_role_option', 'race', 'gender', 'disability_option_id', 'disability_comments', 'funded_hours_per_week', 'agreement_end_date');
						
						$this->required_fields = array('employee_code', 'partner_id', 'based_at', 'select_employee_qualification_option','salary','benefits','additional_expenses','stipend','employee_transition_option_id', 'select_employee_role_option', 'disability_option_id', 'disability_comments', 'funded_hours_per_week', 'agreement_end_date');

						#if ($this->mode != 'add' && $this->employee['id'])
						#echo labelAndField($this, 'Person ID',       'text', 'id', $this->employee['id']);
						if (! $this->hasACL('edit_employee')) 
						{
						    $this->viewonly = true;
						}
						echo labelAndField($this, t('Staff Cadre'),    $this->cadres, 'select_employee_qualification_option');
						if($this->setting['display_employee_primary_role'])
						echo labelAndField($this, t('Primary Role'),   $this->roles,   'select_employee_role_option');
						/*
						echo labelAndField($this, t('Title'),        $this->titles);
						echo labelAndField($this, t('First Name'),   'text', 'first_name',  $this->employee['first_name'] );
						if($this->setting['display_middle_name'])
						echo labelAndField($this, t('Middle Name'),  'text', 'middle_name', $this->employee['middle_name'] );
						echo labelAndField($this, t('Last Name'),    'text', 'last_name',   $this->employee['last_name'] );
						*/
						$this->viewonly = true;
						echo labelAndField($this, t('Employee').space.t('ID'),    'text', 'employee_id',   $this->employee['id'] );
						if ($this->hasACL('edit_employee'))
						{
						    $this->viewonly = false;
						}
						echo labelAndField($this, t('Employee').space.t('Code'),    'text', 'employee_code',   $this->employee['employee_code'] );
						
						if($this->setting['display_employee_dob'])
						echo labelAndField($this, t('Employee Date of Birth').space.('(dd/mm/yyyy)'),'date', 'dob',         $this->employee['dob'] );
						
						// if($this->setting['display_employee_nationality'])
						// echo labelAndField($this, t('Employee Nationality'), $this->nationality, 'select_lookup_nationalities');
						
						// echo labelAndField($this, t('National ID'),  'text', 'national_id', $this->employee['national_id'] );
						
						// if($this->setting['display_employee_other_id'])
						// echo labelAndField($this, t('Other ID'),     'text', 'other_id',    $this->employee['other_id'] );
						
						//if($this->setting['display_employee_race'])
						//echo labelAndField($this, t('Race'),         $this->race, 'race');
						//echo genderDropdown($this,t('Gender'),       'gender', $this->employee['gender']);
						if($this->setting['display_employee_disability']) 
						{
    						$this->viewonly = true;
    						echo confirmDropdown($this, t('Disability'), 'disability_option_id', $this->employee['disability_option_id']);
    						echo labelAndField($this, t('Nature of Disability'), 'text', 'disability_comments', $this->employee['disability_comments']);
    						echo '<div class="clear"></div><br /><br />'.PHP_EOL;
						    if ($this->hasACL('edit_employee'))
						    {
						        $this->viewonly = false;
						    }
						}

						if ($this->mode != 'add' && $this->employee['partner_employee_number'])
						echo labelAndField($this, t('Employee').space.t('Number'),       'text', 'partner_employee_number', $this->employee['partner_employee_number']);
						
						if($this->setting['display_employee_partner'])	
						echo labelAndField($this, t('Employer'),     $this->partners, 'partner_id');
						/*
						foreach ($this->employee['funder'] as $i => $row) 
						{	
							
							//employee_funder_dropdown($this, $this->subPartner, $this->partnerFunder, $this->mechanism, $row['subpartner_id'], $row['partner_funder_option_id'], $row['mechanism_option_id']);
							
							//file_put_contents('c:\wamp\logs\php_debug.log', 'empEdit 85>'.PHP_EOL, FILE_APPEND | LOCK_EX);	ob_start();
							//var_dump($row);
							//var_dump($this->partnerFunder);
							//$result = ob_get_clean(); file_put_contents('c:\wamp\logs\php_debug.log', $result .PHP_EOL, FILE_APPEND | LOCK_EX);
							
							partner_sfm_dropdown($i, $this, $this->subPartner, $this->partnerFunder, $this->mechanism, $row['employee_id'], $row['partner_id'], $row['subpartner_id'], $row['partner_funder_option_id'], $row['mechanism_option_id'], false,  false, ' disabled ');
							
        					echo labelAndField($this, t('Percentage'), 'text','percentage[]', $row['percentage']);
							// BS:#8,#9:20141003:Add hours and cost per employee per mechanism
        					$this->viewonly = true;
        					$percent = $row['percentage']/100.0;
        					if($this->setting['display_hours_per_mechanism'])
        					{
        					    $HOURS_FOR_FULL_WORK_WEEK = 40.0; // TODO: Does this need a home in the database, or is it defined somewhere else?
            					echo labelAndField($this, t('Hours per Mechanism'),  'text', 'hours_per_mechanism',  $percent * $HOURS_FOR_FULL_WORK_WEEK);
        					}

        					if($this->setting['display_annual_cost_to_mechanism'])
        					{
        					   $employee_mechanism_cost = sprintf('%0.2f', $percent * $this->employee['annual_cost']);
        					   echo labelAndField($this, t('Annual Cost to Mechanism'),  'text', 'employee_cost_per_mechanism',  $employee_mechanism_cost.space.$this->translation['Employee Local Currency'], 2);
        					}
						    if ($this->hasACL('edit_employee'))
						    {
						        $this->viewonly = false;
						    }
        					        					 
						}
						//echo '<button id="funder_add">'.t('Add a new').space.t('Funder').'</button><br />';
						
						*/
						
						
						//if($this->setting['display_employee_sub_partner'])
						//echo labelAndField($this, t('Sub Partner'), $this->subpartners, 'subpartner_id');
						if($this->setting['display_employee_base'])
						echo labelAndField($this, t('Employee Based at'), $this->bases, 'based_at');
						region_filters_dropdown( $this, $this->locations, $this->employee, false, false, '', true );
						if($this->setting['display_employee_site_name']) {
							$facDropDown = renderFacilityDropDown($this->facilities, $this->employee['site_id'], $this->viewonly);
							if ($this->hasACL ( 'edit_facility' )) {
								$facDropDown .= '<a href="'.$this->base_url.'/site/add">'.t('Insert a New').space.t('Site').'</a> ';
								$facDropDown .= '<a href="'.$this->base_url.'/site/search">'.t('View/Edit').space.t('Site').'</a>'; // need to put the links inside of the div so they dont wrap to the next line
							}
							echo labelAndField($this, t('Site').space.t('Name'), $facDropDown, 'site');
						}
						if($this->setting['display_employee_site_type'])
						echo labelAndField($this,t('Site').space.t('Type'),   $this->site_types);
						#echo labelAndField($this, t('Address 1').space.t('(Work Address)'),    'text', 'address1',        $this->employee['address1']);
						#echo labelAndField($this, t('Address 2').space.t('(Work Address)'),    'text', 'address2',        $this->employee['address2']);
						#echo labelAndField($this, t('Mobile Phone'), 'text', 'primary_phone',   $this->employee['primary_phone']);
						#echo labelAndField($this, t('Second Phone'), 'text', 'secondary_phone', $this->employee['secondary_phone']);
						#echo labelAndField($this, t('Email'),        'text', 'email',           $this->employee['email']);

						//echo '<div class="clear"></div><br /><br />'.PHP_EOL;
						//echo '<div class="clear"></div><br /><br />'.PHP_EOL;
						if($this->setting['display_employee_staff_category'])
						echo labelAndField($this, t('Staff Category'), $this->categories);
						if($this->setting['display_employee_registration_number'])
						echo labelAndField($this, t('Registration Number'),    'text', 'registration_number',    $this->employee['registration_number']);
						
						if($this->setting['display_employee_contract_end_date'])
						    echo labelAndField($this, t('Contract End Date'),      'date', 'agreement_end_date', $this->employee['agreement_end_date']);
						if($this->setting['display_employee_intended_transition'])
						    echo labelAndField($this, t('Intended Transition'), $this->transitions, 'employee_transition_option_id');
						echo labelAndField($this, t('Other Transition'),  'text', 'transition_other',  $this->employee['transition_other']); // hidden field
						if($this->setting['display_employee_transition_confirmed'])
						    echo confirmDropdown($this, t('Transition Confirmed'), 'transition_confirmed', $this->employee['transition_confirmed']);
						echo labelAndField($this, t('Intended Transition Date'), 'date','transition_date', $this->employee['transition_date']);
						if($this->setting['display_employee_complete_transition'])
						    echo labelAndField($this, t('Actual Transition Outcome'), $this->transitions_complete, 'employee_transition_complete_option_id');
						echo labelAndField($this, t('Other Transition'), 'text', 'transition_complete_other', $this->employee['transition_complete_other']); // hidden field
						
						if($this->setting['display_employee_actual_transition_date'])
						    echo labelAndField($this, t('Actual Transition Date'), 'date','transition_complete_date', $this->employee['transition_complete_date']);
						
						
						// fields for only community health workers and community based workers
						echo '<div class="clear"></div><br /><br />';

						echo '<div id="chw"'.($this->expandCHWFields ? '' : ' style="display:none;"') . '>';
							if($this->setting['display_employee_relationship'])
							echo labelAndField($this, t('Relationship between CHW and formal health services'), $this->relationships);
							if($this->setting['display_employee_referral_mechanism'])
							echo labelAndField($this, t('Referral Mechanism'), $this->referrals);
							if($this->setting['display_employee_chw_supervisor'])
							echo labelAndField($this, t('CHW Supervisor'),     $this->supervisors);
							if($this->setting['display_employee_trainings_provided'])
							echo labelAndField($this, t('Trainings provided'), $this->provided);
						echo '</div>';

						// yearly costs of employee
						echo '<div class="clear"></div><br /><br />';
						if($this->setting['display_employee_salary']
							|| $this->setting['display_employee_benefits']
							|| $this->setting['display_employee_additional_expenses']
							|| $this->setting['display_employee_stipend']) {
							echo '<h2>' . t('Annual Cost to Company  (CTC) funded by PEPFAR only Amount') . '</h2>';
							
							if ($this->translation['Employee Local Currency'] && $this->translation['Employee Local Currency'] != 'Employee Local Currency')
								echo "<br>".t('Currency:').space.$this->translation['Employee Local Currency'].'<br clear="all"/>'; #TODO rework
						}
						if($this->setting['display_employee_full_time'])
						    echo labelAndField($this, t('Full Time'),      $this->fulltime);
						echo labelAndField($this, t('Funded hours per week'),  'text', 'funded_hours_per_week',  $this->employee['funded_hours_per_week']);
						
						if($this->setting['display_employee_salary'])
						echo labelAndField($this, t('Salary'),   'text', 'salary',   $this->employee['salary']);
						if($this->setting['display_employee_benefits'])
						echo labelAndField($this, t('Benefits'), 'text', 'benefits', $this->employee['benefits']);
						if($this->setting['display_employee_additional_expenses'])
						echo labelAndField($this, t('Additional Expenses'), 'text', 'additional_expenses', $this->employee['additional_expenses']);
						if($this->setting['display_employee_stipend'])
						echo labelAndField($this, t('Stipend'),  'text', 'stipend',  $this->employee['stipend']);
						if($this->setting['display_employee_annual_cost'])
						echo labelAndField($this, t('(R)Annual Cost'), 'text', 'annual_cost', $this->employee['annual_cost']);
						//if($this->setting['display_employee_external_funding'])
						//echo labelAndField($this, t('Percentage not paid by').space.t('Partner'), 'text', 'external_funding_percent', $this->employee['external_funding_percent']);

						echo '<div class="clear"></div><br /><br />';

						#echo labelAndField($this, t('Employee Comments'), 'textarea', 'comments',       $this->employee['comments']);

						/////////////////////////// data table - course history - and UI javascript ///////////////////////////
					?>
						<div class="clear"></div><br /><br />

					<?php if($this->setting['display_employee_courses_completed']) require_once ('employee_course_table.phtml'); ?>

					<script type="text/javascript">
						validCHWids = [<?php echo implode(',', $this->validCHWids); ?>]; /* watch Cadre field and show/hide CHW divs on CHW fields */
					</script>

					<script type="text/javascript">
						$(document).ready(function () {  /* doc ready */

							itech_save_confirm_on_leave();

							$('#funder_add').click( function (e) { /* button - add a new funder */
								e.preventDefault();
								var btn = $(this);
								var target = null;

								$(".subPartner_lbl:first").add(".partnerFunder_lbl:first").add(".mechanism_lbl:first").add(".percentage\\[\\]:first").each(function () { // class="fieldlabel funder[]", then 'funding_end_date[]' (we'll use these as a template)
									btn.before( $(this).clone() );
									var template = $(this).next().clone();
									template.find('input,select').val('');							
									btn.before( template );
								});

								$(target).removeClass('hasDatepicker').removeAttr('id').datepicker({ // rebind datepicker and calender
									changeMonth: true,
									changeYear: true
								});
								$('.calendarbtn').unbind('click').click(openNearestDatePicker);
								return false;
							});

							$('#select_employee_qualification_option').change( function () { /* watch Cadre field and show/hide CHW divs on CHW fields */

								if (validCHWids.lastIndexOf( parseInt( $(this).val() ) ) != -1) { // found in the valid list
									$('#chw,#classWrapper').show();
								} else {
									$('#chw,#classWrapper').hide();
								}
							});

							$('#disability_option_id').change( function () { /* watch disability field */
								var objs = $('#disability_comments').parent();
								if ($(this).val() == 1) { // show or hide based on value
									objs.show();
									objs.prev().show();
								} else {
									objs.prev().hide();
									objs.hide();
								}
							}).change(); // fire once

							$('#id').attr({readonly: 'readonly'});
							$('#partner_employee_number').attr({readonly: 'readonly'});
							$('#annual_cost').attr({readonly: 'readonly'});

							$('.datepicker').datepicker({
									changeMonth: true,
									changeYear: true,
									yearRange: "-90:+50",
									dateFormat: "dd/mm/yy"
								});
							$('.calendarbtn').click(openNearestDatePicker);

							$('#salary,#benefits,#additional_expenses,#stipend').change( function () { /* calc amounts */
								$('#annual_cost').calcFieldsMoney('#salary,#benefits,#additional_expenses,#stipend', '#annual_cost');
							});

							$('#select_employee_transition_option').change(function (e) { /* watch the two transition drop downs */
								var selected = $(this).find('option:selected').text();
								if (selected.indexOf("Other") != -1) {
									$('.transition_other,#transition_other').show();
								} else {
									$('.transition_other,#transition_other').hide();
								}
							}).change(); // fire once

							$('select[name=employee_transition_complete_option_id]').change(function (e) { /* watch the two transition drop downs */
								var selected = $(this).find('option:selected').text();
								if (selected.indexOf("Other") != -1) {
									$('.transition_complete_other,#transition_complete_other').show();
								} else {
									$('.transition_complete_other,#transition_complete_other').hide();
								}
							}).change(); // fire once
						});

						(function( $ ){

							$.fn.calcFieldsMoney = function(selector,errField) {
								var flds = $(selector);
								if (! flds.length )
									return;

								var total = 0;
								$('.dec_warning').remove();
								flds.each( function (i, val) {
									new_val = $(this).val().match(/^\D*([\d\.,]+)\s*$/); //optionally $, then 1234 w/ optional decimal, optional space then end
									new_val = (new_val && new_val[1]) ? parseInt(new_val[1]) : 0;
									total += new_val;

									var using_punc_val = $(this).val().match(/[.,]/);
									if (using_punc_val && using_punc_val[0]) { // display warning if using puncuation (!! is force compare bool)
										$('.dec_warning').remove();
										$(errField).after('<span class="errorText dec_warning"> <br> <?php tp('Please do not use decimal places or change, please round the amount up to the next dollar'); ?></span>')
									}
								});

								if ( isNaN (total) )
									total = '?';

								$(this).val(total);
								return this;

						};})( jQuery );

						$(function (e) { /* docready */
							// we dont want to capture national id data if not southafrica, only their site.
							var select   = $('#select_lookup_nationalities');
							var id_fld   = $('#national_id');
							var passport = $('#other_id');
							if (! select.length)
								return;
							if (location.hostname != "pepfarskillsmart.trainingdata.org") /*south africa*/
								return;
							select.change(function (e) {
								if (id_fld.length) {
									if (select.val() != 1) /*south africa - these values are hardcoded. */
										id_fld.attr('disabled','disabled');
									else
										id_fld.attr('disabled', null);
								}
								if (passport.length) {
									if (select.val() == 2) /*foreign*/
										passport.attr('disabled', null);
									else
										passport.attr('disabled','disabled');
								}
							}).change();

							$('#select_employee_base_option').change( function () { /* watch based at field */
								var val = $(this).val();
								var real_val = $(this).find('option:selected').text();
								$('#facilityInput,#province_id,#district_id,#region_c_id,#region_d_id,#region_e_id,#region_f_id,#region_g_id,#region_h_id,#region_i_id').attr('disabled', ((real_val == "Non South African based office") ? 'disabled' : null)); // enable/disable site by value of base field
							}).change(); // fire once

							rgnsels = $('#province_id,#district_id,#region_c_id,#region_d_id,#region_e_id,#region_f_id,#region_g_id,#region_h_id,#region_i_id');
							rgnsels.change(function (e) { /* southafrica, hardcoded, they dont want site_enabled if multiple regions selected */
								var off = false;
								rgnsels.each(function (i, val) {
									var chosen = $(this).find('option:selected').html();
									if (!off && (chosen.indexOf('*Multiple') != -1 || chosen.indexOf('*Not In') != -1))
										off = true;
								});
								if (off)
									$('#facilityInput').attr('disabled', 'disabled');
								else
									$('#facilityInput').removeAttr('disabled');
							});


						});
					</script>
                     <input type="hidden" id="employeeFunding_delete_data" name="employeeFunding_delete_data"/>
                     <input type="hidden" id="employeeFunding_new_data" name="employeeFunding_new_data"/>
                     <?php 
                     echo $this->tableEmployeeFunding;
                     ?>
                    <br />
                      <script>
                    	// fired on "insert" button click
                    	function addMechanism(oButton) {
                    	    var oMechanism = YAHOO.util.Dom.get('new_mechanism');
                    	    var oPercent = YAHOO.util.Dom.get('percentage');
                    
                    	    if(oMechanism.value == ""){
                        	    alert("Mechanism cannot be empty.");
                        	    return;
                    	    }
                    
                    	    if(oPercent.value == ""){
                        	    alert("Percentage cannot be empty.");
                        	    return;
                    	    }
                    	    else if(isNaN(oPercent.value) || (oPercent.value < 1) || (oPercent.value > 100)) {
                    		    alert("Percentage must be a number from 1 to 100.");
                    		    return;
                    	    }
                    
                            var jsonAdd = { }
                            jsonAdd.mechanism = oMechanism.selectedOptions[0].label;
                            jsonAdd.combined_id = oMechanism.value;
                            jsonAdd.percentage = oPercent.value;
                            var percent = jsonAdd.percentage / 100.0;
                            
                            jsonAdd.hours = percent * <?php echo $this->employee['funded_hours_per_week']?>;
                            jsonAdd.cost = percent * <?php echo $this->employee['annual_cost']?>;
                          	ITECH.employeeFundingTable.addDataRow(jsonAdd, oMechanism.value);
                                    
                            oMechanism.value = "";
                            oPercent.value = "";
                          }
                      </script>
                      
                    <div><label class="label">Mechanism</label>
                      <select id="new_mechanism" name="new_mechanism">
                      <option value="">--choose--</option>
                      <?php 
                      foreach ($this->mechanismList as $i => $row)
                      {
                        echo '<option value='.$row['combined_id'].'>'.$row['mechanism_phrase'].'</option>';
                      }
                      ?>
                      </select>
                      <span>
                        <label class="label">Percentage</label>
                        <input type="text" id="percentage" name="percentage" value="" />
                      </span>
                      <input type="submit" name="associateMechanism" value="<?php tp("Add");?>" class="insert" id="mechanismInsertButton" onclick="addMechanism(this);return false;"/>
                    </div>

					<div class="clear"></div>
					<input type="hidden" name="limit" id="limit" value="1" />

					<input type="submit" class="submitNoArrow" name="saveonly" value="<?php tp('Save');?>" />
			</form>
			<div class="clear"></div>
		</div>
	</body>
</html>
